#cloud-config
output: { all: "| tee -a /var/log/cloud-init-output.log" }
package_update: true
package_upgrade: true
packages:
  - apt-transport-https
  - ca-certificates
  - curl
  - gnupg

# Let iptables see bridged traffic
# https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/#letting-iptables-see-bridged-traffic
write_files:
  - path: /etc/modules-load.d/k8s.conf
    content: |
      overlay
      br_netfilter

    # Setup required sysctl params, these persist across reboots.
  - path: /etc/sysctl.d/99-kubernetes-cri.conf
    content: |
      net.ipv4.ip_forward                 = 1
      net.bridge.bridge-nf-call-iptables  = 1
      net.ipv6.conf.all.forwarding        = 1
      net.bridge.bridge-nf-call-ip6tables = 1

  - path: /usr/lib/systemd/system/containerd.service
    content: |
      [Unit]
      Description=containerd container runtime
      Documentation=https://containerd.io
      After=network.target local-fs.target

      [Service]
      ExecStartPre=-/sbin/modprobe overlay
      ExecStart=/usr/local/bin/containerd

      Type=notify
      Delegate=yes
      KillMode=process
      Restart=always
      RestartSec=5
      LimitNPROC=infinity
      LimitCORE=infinity
      LimitNOFILE=infinity
      TasksMax=infinity
      OOMScoreAdjust=-999

      [Install]
      WantedBy=multi-user.target

runcmd:
  # Reload sysctl config to incorporate our set changes
  - sysctl --system
  # Install&configure containerd
  - wget https://github.com/containerd/containerd/releases/download/v1.6.6/containerd-1.6.6-linux-amd64.tar.gz
  - tar Czxvf /usr/local containerd-1.6.6-linux-amd64.tar.gz
  - wget https://github.com/opencontainers/runc/releases/download/v1.1.3/runc.amd64
  - install -m 755 runc.amd64 /usr/local/sbin/runc
  - mkdir -p /etc/containerd/
  - containerd config default > /etc/containerd/config.toml
  - sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml
  - systemctl daemon-reload
  - systemctl enable --now containerd

  # Install k8s components
  - curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
  - echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
  - apt-get update -y
  - apt-get install -y kubelet kubeadm kubectl
  - apt-mark hold kubelet kubeadm kubectl

power_state:
  delay: now
  mode: reboot
  timeout: 300
  condition: true
